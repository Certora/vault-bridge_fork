{
    "assert_autofinder_success": true,
    "disable_auto_cache_key_gen": true,
    "files": [
        "certora/harnesses/StorageExtension.sol",
        "certora/mocks/ILxLyBridgeMock.sol",
        "certora/mocks/PermitMock.sol",
        "src/custom-tokens/GenericNativeConverter.sol",
        "src/custom-tokens/GenericCustomToken.sol",
        "src/vault-bridge-tokens/GenericVbToken.sol",
        "src/vault-bridge-tokens/vbETH/VbETH.sol",
        "src/vault-bridge-tokens/vbUSDT/TransferFeeUtilsVbUSDT.sol",
        "src/VaultBridgeTokenInitializer.sol",
        "src/etc/MockVault.sol",
        "dependencies/forge-std-1.9.4/src/mocks/MockERC20.sol",
        "zkevm-contracts/contracts/v2/sovereignChains/BridgeL2SovereignChain.sol",
    ],
    "global_timeout": "7200",
    "loop_iter": "1",
    "msg": "sanity_GenericNativeConverter",
    "mutations": {
        "gambit": [
            {
                "filename": "src/custom-tokens/GenericNativeConverter.sol",
                "num_mutants": 5
            }
        ]
    },
    "optimistic_hashing": true,
    "optimistic_loop": true,
    "packages": [
        "@types/bun=node_modules/@types/bun",
        "@0xpolygonhermez/zkevm-commonjs=node_modules/@0xpolygonhermez/zkevm-commonjs",
        "@openzeppelin-contracts-upgradeable=dependencies/@openzeppelin-contracts-upgradeable-5.1.0",
        "@openzeppelin-contracts=dependencies/@openzeppelin-contracts-5.1.0",
        "@openzeppelin/contracts=dependencies/@openzeppelin-contracts-5.1.0",
        "forge-std=dependencies/forge-std-1.9.4/src",
        // for zkmevm-contracts
        "@openzeppelin/contracts-upgradeable4=zkevm-contracts/node_modules/@openzeppelin/contracts-upgradeable4",
        "@openzeppelin/contracts-upgradeable5=zkevm-contracts/node_modules/@openzeppelin/contracts-upgradeable5",
    ],
    "process": "emv",
    "prover_args": [
        "-verifyCache ",
        "-verifyTACDumps",
        "-testMode",
        "-checkRuleDigest",
        "-callTraceHardFail on"
    ],
    "prover_version": "master",
    "solc": "solc8.28",
    "solc_optimize": "200",
    "solc_via_ir": true,
    "storage_extension_harnesses": [
        "GenericNativeConverter=StorageExtension",
    ],
    "verify": "GenericNativeConverter:certora/specs/setup/sanity_GenericNativeConverter.spec"
}
